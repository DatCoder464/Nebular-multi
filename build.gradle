 plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.5-SNAPSHOT" apply false
    id "org.jetbrains.kotlin.jvm" version "1.9.10" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "org.jetbrains.kotlin.jvm"

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        mavenCentral()
        maven { url = "https://maven.shedaniel.me/" } // Cloth Config, REI
        maven { url = "https://maven.blamejared.com/" } // JEI
        maven { url = "https://maven.parchmentmc.org" } // Parchment mappings
        maven { url = "https://maven.quiltmc.org/repository/release" } // Quilt Mappings
        maven { url = "https://thedarkcolour.github.io/KotlinForForge/" } //Kotlin for Forge
        maven { // Flywheel
            url = "https://maven.tterrag.com/"
            content {
                // need to be specific here due to version overlaps
                includeGroup("com.jozufozu.flywheel")
            }
        }
        maven {
            name = "alex's repo"
            url = uri("http://207.180.202.42:8080/libs")
            allowInsecureProtocol = true
        }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${minecraft_version}"
        // layered mappings - Mojmap names, parchment and QM docs and parameters
        mappings(loom.layered {
            it.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${qm_version}:intermediary-v2")
            it.parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
            it.officialMojangMappings { nameSyntheticMembers = false }
        })

        implementation("me.alex_s168:meshlib:0.7h1")
        implementation("me.alex_s168:mathlib:0.5h6")
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = archives_base_name
    group = maven_group

    // Formats the mod version to include the loader, Minecraft version, and build number (if present)
    // example: 1.0.0+fabric-1.18.2-100
    String buildNumber = System.getenv("GITHUB_RUN_NUMBER")
    version = "${mod_version}+${project.name}-${minecraft_version}" + (buildNumber != null ? "-${buildNumber}" : "")

    repositories {
        maven { url = 'https://maven.valkyrienskies.org' } //Valkyrien Skies Internal
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    java {
        withSourcesJar()
    }

}
