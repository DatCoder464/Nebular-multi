architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/nebular.accesswidener")
}

repositories {
    // mavens for Create Fabric and dependencies
    maven { url = "https://api.modrinth.com/maven" } // LazyDFU
    maven { url = "https://maven.terraformersmc.com/releases/" } // Mod Menu
    maven { url = "https://mvn.devos.one/snapshots/" } // Create Fabric, Porting Lib, Forge Tags, Milk Lib, Registrate Fabric
    maven { url = "https://mvn.devos.one/releases/" } // Porting Lib Releases
    maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
    maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM
}

dependencies {
    modImplementation("net.fabricmc:fabric-loader:${fabric_loader_version}")

    modCompileOnly("com.simibubi.create:create-fabric-${minecraft_version}:${create_fabric_version}")
    // VS2
    modApi("org.valkyrienskies:valkyrienskies-120-common:${vs2_version}")
    implementation("org.valkyrienskies.core:api:${vscore_version}") {
        exclude group: 'org.joml', module: ''
    }
    implementation("org.valkyrienskies.core:impl:${vscore_version}") {
        exclude group: 'org.joml', module: ''
    }
    implementation("org.valkyrienskies.core:api-game:${vscore_version}") {
        exclude group: 'org.joml', module: ''
    }
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
